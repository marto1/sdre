from re import split
from random import choice


class Goal(object):
    """Sentence to be generated"""
    placeholder_words = ["oh", "ok", "what"]

    def __init__(self, goal_string=""):
        self.goal_string = goal_string
        self.symbol_parse = {".": self.parse_placeholder,}
                             #" ": self.parse_space}

    def generate_placeholder_words(self, tokens, index):
        pass

    def parse_placeholder(self, tokens, index):
        """
        Placeholders are generated by choosing random word
        from specified set.
        """
        self.generate_placeholder_words(tokens, index)
        return choice(self.placeholder_words)

    def tokenize(self):
        return split(" ", self.goal_string)

    def compile(self):
        tokens = self.tokenize()
        for index in xrange(len(tokens)):
            token = tokens[index]
            if token in self.symbol_parse:
                r = self.symbol_parse[token](tokens, index)
                tokens[index] = r
        return tokens

#Goal.generate_placeholder_words = lambda self, tokens, index: 2
# p = Goal(". expressions have . rules! Dude what the fuck .")
# print p.compile()
